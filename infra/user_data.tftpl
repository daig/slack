#!/bin/bash
apt-get update

# Install Docker dependencies and nginx
apt-get install -y \
    ca-certificates \
    curl \
    gnupg \
    nginx \
    nodejs \
    npm

# Add Docker's official GPG key
install -m 0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
chmod a+r /etc/apt/keyrings/docker.gpg

# Add Docker repository
echo \
  "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
  tee /etc/apt/sources.list.d/docker.list > /dev/null

# Install Docker
apt-get update
apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

# Start and enable Docker service
systemctl start docker
systemctl enable docker

# Clone the repository
git clone https://github.com/daig/slack /home/ubuntu/slack
chown -R ubuntu:ubuntu /home/ubuntu/slack

# Create .env file
cat > /home/ubuntu/slack/.env << 'ENVFILE'
${env_file_contents}
ENVFILE

chown ubuntu:ubuntu /home/ubuntu/slack/.env
chmod 600 /home/ubuntu/slack/.env

# Set up landing page
cd /home/ubuntu/slack/landing-page
npm install
npm run build
npm run copy-assets

# Configure nginx
cat > /etc/nginx/sites-available/default << 'NGINX'
server {
    listen 80;
    server_name _;

    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}
NGINX

# Restart nginx
systemctl restart nginx

# Start landing page server
cd /home/ubuntu/slack/landing-page
npm start &

# Start Docker services
cd /home/ubuntu/slack
docker compose up -d 