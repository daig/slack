services:
  postgres:
    build: 
      context: ./docker/postgres
      dockerfile: Dockerfile
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - slackapp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5

  postgraphile:
    restart: always
    build:
      context: ./docker/graphile
      dockerfile: Dockerfile
    env_file:
      - ./.env
    networks:
      - slackapp-network
    ports:
      - "5000:5000"
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-app}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-app}
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_here}
    depends_on:
      postgres:
        condition: service_healthy

  landing-page:
    build:
      context: ./landing-page
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - slackapp-network
    restart: always

networks:
  slackapp-network:

volumes:
  postgres_data: 
